// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./sqlite.db"
}

enum intentEnum {
  Guilds
  GuildMembers
  GuildModeration
  GuildBans
  GuildExpressions
  GuildEmojisAndStickers
  GuildIntegrations
  GuildWebhooks
  GuildInvites
  GuildVoiceStates
  GuildPresences
  GuildMessages
  GuildMessageReactions
  GuildMessageTyping
  DirectMessages
  DirectMessageReactions
  DirectMessageTyping
  MessageContent
  GuildScheduledEvents
  AutoModerationConfiguration
  AutoModerationExecution
  GuildMessagePolls
  DirectMessagePolls
}

model activeIntent {
  name intentEnum @id
}

enum featureEnum {
  AddRoleOnMemberJoin
  ChangeNicknameChannel
  DailyQuestionForward
  DirectWelcomeMessage
  DynamicVoiceChannelState
  GoodbyMessageAndDM
  JoinAuroraConcert
  MediaOnlyForum
  PauseAuroraPlaylist
  PlayAuroraPlaylist
  ProvinceRoleInNickname
  ProvinceRoleNicknameRemove
  SetStatus
  WelcomeBannerForward
}

model activeFeature {
  name featureEnum @id
}

// enum listenerEnum {
//   applicationCommandPermissionsUpdate
//   autoModerationActionExecution
//   autoModerationRuleCreate
//   autoModerationRuleDelete
//   autoModerationRuleUpdate
//   ready
//   entitlementCreate
//   entitlementDelete
//   entitlementUpdate
//   guildAuditLogEntryCreate
//   guildAvailable
//   guildCreate
//   guildDelete
//   guildUpdate
//   guildUnavailable
//   guildMemberAdd
//   guildMemberRemove
//   guildMemberUpdate
//   guildMemberAvailable
//   guildMembersChunk
//   guildIntegrationsUpdate
//   roleCreate
//   roleDelete
//   inviteCreate
//   inviteDelete
//   roleUpdate
//   emojiCreate
//   emojiDelete
//   emojiUpdate
//   guildBanAdd
//   guildBanRemove
//   channelCreate
//   channelDelete
//   channelUpdate
//   channelPinsUpdate
//   messageCreate
//   messageDelete
//   messageUpdate
//   messageDeleteBulk
//   messagePollVoteAdd
//   messagePollVoteRemove
//   messageReactionAdd
//   messageReactionRemove
//   messageReactionRemoveAll
//   messageReactionRemoveEmoji
//   threadCreate
//   threadDelete
//   threadUpdate
//   threadListSync
//   threadMemberUpdate
//   threadMembersUpdate
//   userUpdate
//   presenceUpdate
//   voiceChannelEffectSend
//   voiceServerUpdate
//   voiceStateUpdate
//   typingStart
//   webhookUpdate
//   interactionCreate
//   error
//   warn
//   debug
//   cacheSweep
//   shardDisconnect
//   shardError
//   shardReconnecting
//   shardReady
//   shardResume
//   invalidated
//   raw
//   stageInstanceCreate
//   stageInstanceUpdate
//   stageInstanceDelete
//   subscriptionCreate
//   subscriptionUpdate
//   subscriptionDelete
//   stickerCreate
//   stickerDelete
//   stickerUpdate
//   guildScheduledEventCreate
//   guildScheduledEventUpdate
//   guildScheduledEventDelete
//   guildScheduledEventUserAdd
//   guildScheduledEventUserRemove
// }

// model listener {
//   name          listenerEnum    @id
//   activeFeature activeFeature[]
// }
